{"version":3,"sources":["components/tictactoe/marioO.png","image/smb.png","logo.svg","components/icon/icon.svg","components/icon/star.svg","components/icon/money.svg","components/icon/link.svg","components/icon/tictactoe.svg","components/icon/context.svg","components/tictactoe/luigiX.png","components/tictactoe/tictactoebg1.png","components/icon/Fire.svg","components/FIFO&FIFO/img/MarioF.svg","components/FIFO&FIFO/img/LuigiF.svg","components/FIFO&FIFO/img/Peach.svg","components/FIFO&FIFO/img/Toad.svg","components/FIFO&FIFO/img/Red.svg","components/FIFO&FIFO/img/Green.svg","components/FIFO&FIFO/img/Goomba.svg","image/smb1.png","components/MyIcon.js","components/tictactoe/box.js","components/tictactoe/tictactoe.js","components/functions.js","components/account/AccountDiv.js","components/account/account.js","components/city/MigrantDiv.js","components/city/api.js","components/city/Migrant.js","components/link/LinkList.js","components/context/ThemeContext.js","components/link/LinkDiv.js","components/link/LinkListHook.js","components/FIFO&FIFO/Stack.js","components/FIFO&FIFO/Queue.js","components/FIFO&FIFO/LinkDiv.js","components/FIFO&FIFO/InAndOut.js","components/context/ContextMain.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MyIcon","className","src","this","props","alt","name","onClick","onImageClick","React","Component","Box","state","onBoxClick","id","content","Tictactoe","handleBoxClickEvent","index","boxes","history","operator","calculateWinner","newBoxes","slice","newOperator","marioO","luigiX","push","squares","nextPlayer","setState","lines","i","length","a","b","c","timer","record","splice","Array","fill","status","winner","tictactoebg1","map","box","key","Account","accountName","balance","accountType","amount","AccountController","userAccounts","isRepeat","newAccount","deposit","withdraw","balance1","summary","balanceNumbers","heighestValue","Math","max","accountType1","reduce","prev","current","str","City","latitude","longitude","population","num","console","log","Community","communityCities","keySeris","result","message","newCity","lat","latitude1","name1","isNaN","parseFloat","population1","inAndOut","movedIn","movedOut","AccountDiv","removeAccount","ReactAccount","controller","addAccount","leftAccountList","value","options","selectedIndex","text","operateAccount","accountOperation","rightAccoutList","getHeighest","height","getLowest","lowt","lowestValue","handleRemoveAccount","ref","select","totalBalance","type","input","account","MigrantDiv","city","removeCity","getData","postData","url","data","cityData","Number","cityObj","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","response","json","statusText","Migrant","country","componentDidMount","onLoad","createCity","creatCity","cityName","latitudeNum","longitudeNum","populationNum","addData","alert","handleDeleteCity","deleteCity","deleteData","popOperator","cityList","getAttribute","updateData","getPopulation","getMostNorthern","getMostSouthern","operatePop","ListNode","subject","forwardNode","previousNode","LinkedList","flag","head","newNode","seekingNode","next","sumAmount","Symbol","iterator","ThemeContext","createContext","ThemeContextProvider","setFontColor","event","fontColor","target","setBgPic","bgPic","smb","Provider","children","NewNode","context","useContext","useState","fColor","style","color","isFlag","handleDeleteEvent","List","linked","setLinked","subjectName","useRef","useEffect","delete","cloneLinked","Object","assign","create","getPrototypeOf","listAllNode","e","insert","first","last","disabled","previous","creatNewNode","Stack","Queue","age","FIFOLIFO","setFIFOLIFO","picsList","setPicsList","changeValue","random","charactersPics","characters","floor","includes","randomPics","putIN","indexOf","takeOut","MarioF","LuigiF","Peach","Toad","Red","Green","Goomba","Theme","onChange","smb1","contextType","App","startGame","sences","gamePage","myAccount","accountPage","goBack","startPage","cityCommunity","linkedList","myContext","icons","icon","heading","tictactoe","star","money","link","Fire","logo","href","rel","LinkListHook","InAndOut","item","backgroundImage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3090ea0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marioO.c92192a3.png\";","module.exports = __webpack_public_path__ + \"static/media/smb.913923a8.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon.6315d98e.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.3dceb8cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/money.643200dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/link.5d9371e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/tictactoe.74082717.svg\";","module.exports = __webpack_public_path__ + \"static/media/context.03b7fc26.svg\";","module.exports = __webpack_public_path__ + \"static/media/luigiX.12492fa5.png\";","module.exports = __webpack_public_path__ + \"static/media/tictactoebg1.d4b454f4.png\";","module.exports = __webpack_public_path__ + \"static/media/Fire.7d669b4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/MarioF.4fbe4c5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/LuigiF.7a413553.svg\";","module.exports = __webpack_public_path__ + \"static/media/Peach.394ecfce.svg\";","module.exports = __webpack_public_path__ + \"static/media/Toad.adcc5533.svg\";","module.exports = __webpack_public_path__ + \"static/media/Red.3edb92ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/Green.3e020c2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Goomba.2d3a1701.svg\";","module.exports = __webpack_public_path__ + \"static/media/smb1.963d81f5.png\";","import React from \"react\";\r\n\r\nclass MyIcon extends React.Component {\r\n  render() {\r\n    return (\r\n      <img\r\n        className=\"Icon Icon-logo\"\r\n        src={this.props.src}\r\n        alt={this.props.name}\r\n        onClick={this.props.onImageClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyIcon;\r\n","import React, { Component } from \"react\";\r\nclass Box extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div onClick={this.props.onBoxClick} id={this.props.id} className=\"box\">\r\n        <img src={this.props.content} className=\"OX\" alt=\"\"></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Box;\r\n","import React, { Component } from \"react\";\r\nimport Box from \"./box\";\r\nimport marioO from \"./marioO.png\";\r\nimport luigiX from \"./luigiX.png\";\r\nimport tictactoebg1 from \"./tictactoebg1.png\";\r\nclass Tictactoe extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      boxes: Array(9).fill(null),\r\n      history: [{ squares: Array(9).fill(null), nextPlayer: marioO }],\r\n      operator: marioO\r\n    };\r\n  }\r\n\r\n  handleBoxClickEvent = index => {\r\n    const { boxes, history, operator } = this.state;\r\n    if (boxes[index] !== null) return;\r\n    if (this.calculateWinner()) {\r\n      return;\r\n    }\r\n    let newBoxes = boxes.slice();\r\n    newBoxes[index] = operator;\r\n    let newOperator = operator === marioO ? luigiX : marioO;\r\n    history.push({ squares: newBoxes, nextPlayer: newOperator });\r\n    this.setState({\r\n      boxes: newBoxes,\r\n      history: history,\r\n      operator: newOperator\r\n    });\r\n    return;\r\n  };\r\n\r\n  calculateWinner = () => {\r\n    const { boxes } = this.state;\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (boxes[a] !== null && boxes[a] === boxes[b] && boxes[a] === boxes[c]) {\r\n        return boxes[a] === marioO ? \"Mario\" : \"Luigi\";\r\n      }\r\n    }\r\n    for (let i = 0; i < boxes.length; i++) {\r\n      if (boxes[i] === null) {\r\n        return null;\r\n      }\r\n    }\r\n    return \"Tied\";\r\n  };\r\n\r\n  timer = (record, index) => {\r\n    let { history } = this.state;\r\n    history.splice(index + 1, history.length - index);\r\n    this.setState({\r\n      boxes: record.squares,\r\n      history: history,\r\n      operator: record.nextPlayer\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const winner = this.calculateWinner(this.state.squares);\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status =\r\n        \"Next player: \" + (this.state.operator === marioO ? \"Mario\" : \"Luigi\");\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"status\">\r\n          {status}\r\n          {/* {winner === \"Tied\" ? (\r\n            <button\r\n              onClick={() => {\r\n                this.timer(this.state.history[0], 0);\r\n              }}\r\n            >\r\n              Restart\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )} */}\r\n        </div>\r\n\r\n        <div className=\"gameArea\">\r\n          <img className=\"gamePage\" src={tictactoebg1} alt=\"innerBox\"></img>\r\n          <div className=\"board\">\r\n            {this.state.boxes.map((box, index) => {\r\n              return (\r\n                <Box\r\n                  onBoxClick={() => {\r\n                    this.handleBoxClickEvent(index);\r\n                  }}\r\n                  key={index}\r\n                  id={index}\r\n                  content={box}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"historyBtn\">\r\n            {this.state.history.map((record, index) => {\r\n              return (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => {\r\n                    this.timer(record, index);\r\n                  }}\r\n                >\r\n                  Go Back to step {index}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tictactoe;\r\n","class Account {\r\n  constructor(accountName, balance, accountType) {\r\n    this.accountName = accountName;\r\n    this.balance = balance;\r\n    this.accountType = accountType;\r\n  }\r\n\r\n  deposit(amount) {\r\n    this.balance += amount;\r\n    return this.balance;\r\n  }\r\n\r\n  withdraw(amount) {\r\n    this.balance -= amount;\r\n    return this.balance;\r\n  }\r\n\r\n  balance1() {\r\n    return this.balance;\r\n  }\r\n\r\n  accountType1() {\r\n    return this.accountType;\r\n  }\r\n}\r\n\r\nclass AccountController {\r\n  constructor() {\r\n    this.userAccounts = [];\r\n  }\r\n\r\n  addAccount(accountName, balance, accountType) {\r\n    if (this.isRepeat(accountName)) {\r\n      return;\r\n    }\r\n    const newAccount = new Account(accountName, balance, accountType);\r\n    this.userAccounts.push(newAccount);\r\n    return newAccount;\r\n  }\r\n\r\n  isRepeat(accountName) {\r\n    for (let b of this.userAccounts) {\r\n      if (b.accountName === accountName) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  accountOperation(accountName, amount, operator) {\r\n    for (let b of this.userAccounts) {\r\n      if (accountName === b.accountName) {\r\n        if (operator === \"deposit\") {\r\n          b.deposit(amount);\r\n        }\r\n        if (operator === \"withdraw\") {\r\n          b.withdraw(amount);\r\n        }\r\n        return b.balance1();\r\n      }\r\n    }\r\n  }\r\n\r\n  totalBalance() {\r\n    let summary = 0;\r\n    for (let b of this.userAccounts) {\r\n      summary += b.balance1();\r\n    }\r\n    return summary;\r\n  }\r\n\r\n  heighestValue() {\r\n    let balanceNumbers = [];\r\n    for (let b of this.userAccounts) {\r\n      balanceNumbers.push(b.balance1());\r\n    }\r\n    let heighestValue = Math.max(...balanceNumbers);\r\n    for (let b of this.userAccounts) {\r\n      if (b.balance1() === heighestValue) {\r\n        return [b.accountType1(), b.balance1()];\r\n        // return {\"type\":b.accountType1(),\"balance\":b.balance1()};\r\n      }\r\n    }\r\n    return [\"\", 0];\r\n  }\r\n\r\n  lowestValue() {\r\n    //let balanceNumbers = [];\r\n    if (this.userAccounts.length < 1) return [\"\", 0];\r\n    let b = this.userAccounts.reduce((prev, current) =>\r\n      prev.balance1() < current.balance1() ? prev : current\r\n    );\r\n    return [b.accountType1(), b.balance1()];\r\n  }\r\n\r\n  replaceOption() {\r\n    let str = \"\";\r\n    for (let b of this.userAccounts) {\r\n      str +=\r\n        \"<option value=\" + b.accountName + \">\" + b.accountType1() + \"</option>\";\r\n    }\r\n    return str;\r\n  }\r\n\r\n  removeAccount(accountName) {\r\n    for (let b in this.userAccounts) {\r\n      if (this.userAccounts[b].accountName === accountName) {\r\n        this.userAccounts.splice(b, 1);\r\n        break;\r\n      }\r\n    }\r\n    return this.userAccounts;\r\n  }\r\n}\r\n\r\nclass City {\r\n  constructor(key, name, latitude, longitude, population) {\r\n    this.name = name;\r\n    this.latitude = latitude;\r\n    this.longitude = longitude;\r\n    this.population = population;\r\n    this.key = key;\r\n  }\r\n\r\n  show() {\r\n    return `${this.name} ${this.latitude} ${this.longitude} ${this.population}`;\r\n  }\r\n\r\n  movedIn(num) {\r\n    if (num > 0) this.population += num;\r\n    console.log(this.population);\r\n    return this.population;\r\n  }\r\n\r\n  movedOut(num) {\r\n    if (num > 0) {\r\n      this.population -= num;\r\n      if (this.population < 0) this.population = 0;\r\n    }\r\n    return this.population;\r\n  }\r\n\r\n  howBig() {\r\n    if (this.population > 100000) {\r\n      return \"City\";\r\n    } else if (this.population > 20000) {\r\n      return \"Large Town\";\r\n    } else if (this.population > 1000) {\r\n      return \"Town\";\r\n    } else if (this.population > 100) {\r\n      return \"Village\";\r\n    }\r\n    return \"Hamlet\";\r\n  }\r\n\r\n  whichSphere() {\r\n    if (this.latitude > 0) {\r\n      return \"Northern Hemipnere\";\r\n    } else if (this.latitude < 0) {\r\n      return \"Southern Hemisphere\";\r\n    } else return \"Equator\";\r\n  }\r\n  latitude1() {\r\n    return this.latitude;\r\n  }\r\n\r\n  longitude1() {\r\n    return this.longitude;\r\n  }\r\n  name1() {\r\n    return this.name;\r\n  }\r\n\r\n  population1() {\r\n    return this.population;\r\n  }\r\n}\r\n\r\nclass Community {\r\n  constructor() {\r\n    this.communityCities = [];\r\n    this.keySeris = 1;\r\n  }\r\n\r\n  createCity(name, key, latitude, longitude, population) {\r\n    if (!key <= 0) this.keySeris = key;\r\n    if (\r\n      name === \"\" &&\r\n      latitude === \"\" &&\r\n      longitude === \"\" &&\r\n      population === \"\"\r\n    ) {\r\n      return {\r\n        result: false,\r\n        message: \"Please enter your infromation completely!\"\r\n      };\r\n    }\r\n    for (let b of this.communityCities) {\r\n      if (\r\n        b.name === name &&\r\n        b.latitude === latitude &&\r\n        b.longitude === longitude\r\n      ) {\r\n        return { result: false, message: \"The City is invailed\" };\r\n      }\r\n    }\r\n    const newCity = new City(\r\n      this.keySeris++,\r\n      name,\r\n      latitude,\r\n      longitude,\r\n      population\r\n    );\r\n    this.communityCities.push(newCity);\r\n    return { result: true, newCity: newCity };\r\n  }\r\n\r\n  deleteCity(key) {\r\n    for (let b in this.communityCities) {\r\n      if (this.communityCities[b].key === key) {\r\n        this.communityCities.splice(this.communityCities[b], 1);\r\n      }\r\n    }\r\n    return this.communityCities;\r\n  }\r\n\r\n  getMostNorthern() {\r\n    let lat = [];\r\n    for (let b of this.communityCities) {\r\n      lat.push(b.latitude1());\r\n    }\r\n\r\n    let heighestValue = Math.max(...lat);\r\n    for (let b of this.communityCities) {\r\n      if (b.latitude1() == heighestValue) {\r\n        console.log(b);\r\n        return b.name1();\r\n      }\r\n    }\r\n  }\r\n\r\n  getMostSouthern() {\r\n    if (this.communityCities.length < 1) return [\"\", 0];\r\n    let b = this.communityCities.reduce((prev, current) =>\r\n      prev.latitude1() < current.latitude1() ? prev : current\r\n    );\r\n    return b.name1();\r\n  }\r\n\r\n  getPopulation() {\r\n    let summary = 0;\r\n    for (let b of this.communityCities) {\r\n      summary += isNaN(parseFloat(b.population1()))\r\n        ? 0\r\n        : parseFloat(b.population1());\r\n    }\r\n\r\n    return summary;\r\n  }\r\n\r\n  popOperator(name, key, amount, inAndOut) {\r\n    amount = parseFloat(amount);\r\n    key = parseFloat(key);\r\n    if (isNaN(amount)) return null;\r\n\r\n    for (let b of this.communityCities) {\r\n      if (b.name === name && b.key === key) {\r\n        b.population = parseFloat(b.population);\r\n        switch (inAndOut) {\r\n          case \"moveIn\":\r\n            b.movedIn(amount);\r\n            break;\r\n          case \"moveOut\":\r\n            b.movedOut(amount);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        return b;\r\n      }\r\n    }\r\n  }\r\n\r\n  addCityInInput() {\r\n    let str = \"\";\r\n    for (let b of this.communityCities) {\r\n      str += `<option value='${b.name1()}' key='${b.key}'> ${b.name1()} ${\r\n        b.key\r\n      }</option>`;\r\n    }\r\n    return str;\r\n  }\r\n}\r\n\r\nexport { AccountController, Account, City, Community };\r\n","import React, { Component } from \"react\";\r\nclass AccountDiv extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"acc\">\r\n        <h5>Account Type:{this.props.accountType}</h5>\r\n        <h4>Your Balance:{this.props.balance}</h4>\r\n        <button className=\"money remove\" onClick={this.props.removeAccount}>\r\n          Remove\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountDiv;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { AccountController } from \"../functions\";\r\nimport AccountDiv from \"./AccountDiv\";\r\n\r\nclass ReactAccount extends Component {\r\n  state = { controller: new AccountController() };\r\n  addAccount = () => {\r\n    let { controller } = this.state;\r\n    let newAccount = controller.addAccount(\r\n      this.leftAccountList.value,\r\n      0,\r\n      this.leftAccountList.options[this.leftAccountList.selectedIndex].text\r\n    );\r\n    if (newAccount) {\r\n      this.setState({ controller: controller });\r\n    }\r\n  };\r\n\r\n  operateAccount = operator => {\r\n    let { controller } = this.state;\r\n    controller.accountOperation(\r\n      this.rightAccoutList.value,\r\n      parseFloat(this.amount.value),\r\n      operator\r\n    );\r\n    this.setState({ controller: controller });\r\n  };\r\n\r\n  getHeighest = () => {\r\n    let { controller } = this.state;\r\n    let height = controller.heighestValue();\r\n    return height[0] + \"$\" + height[1];\r\n  };\r\n\r\n  getLowest = () => {\r\n    let { controller } = this.state;\r\n    let lowt = controller.lowestValue();\r\n    return lowt[0] + \" $\" + lowt[1];\r\n  };\r\n\r\n  handleRemoveAccount = accountName => {\r\n    let { controller } = this.state;\r\n    controller.removeAccount(accountName);\r\n    this.setState({ controller: controller });\r\n  };\r\n\r\n  render() {\r\n    let { controller } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"split left\" id=\"left\">\r\n          <h3>Add Account</h3>\r\n          <h5 className=\"leftInput\">Account Type:</h5>\r\n          <form>\r\n            <select\r\n              ref={select => {\r\n                this.leftAccountList = select;\r\n              }}\r\n            >\r\n              <option value=\"checking\">Checking Account</option>\r\n\r\n              <option value=\"saving\">Saving Account</option>\r\n\r\n              <option value=\"rrsp\">RRSP</option>\r\n\r\n              <option value=\"tfsa\">TFSA</option>\r\n            </select>\r\n          </form>\r\n          <button className=\"money money5\" onClick={this.addAccount}>\r\n            Add\r\n          </button>\r\n          <div className=\"leftArea\">\r\n            <h3>Account Summary</h3>\r\n            <h5>\r\n              Total of Your Account:${this.state.controller.totalBalance()}{\" \"}\r\n            </h5>\r\n            <h5>Hightest Value Account:{this.getHeighest()}</h5>\r\n            <h5>Lowest Value Account:{this.getLowest()}</h5>\r\n          </div>\r\n        </div>\r\n        <div id=\"accArea\" className=\"split right\">\r\n          <h3>Account Information</h3>\r\n\r\n          <button\r\n            className=\"money\"\r\n            onClick={() => this.operateAccount(\"deposit\")}\r\n          >\r\n            Deposit\r\n          </button>\r\n          <button\r\n            className=\"money money2\"\r\n            onClick={() => this.operateAccount(\"withdraw\")}\r\n          >\r\n            Withdraw\r\n          </button>\r\n\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            ref={input => {\r\n              this.amount = input;\r\n            }}\r\n          />\r\n          <form>\r\n            <select\r\n              ref={select => {\r\n                this.rightAccoutList = select;\r\n              }}\r\n            >\r\n              {controller.userAccounts.map((account, index) => {\r\n                return (\r\n                  <option key={index} value={account.accountName}>\r\n                    {account.accountType}\r\n                  </option>\r\n                );\r\n              })}\r\n              }\r\n            </select>\r\n          </form>\r\n          {controller.userAccounts.map((account, index) => {\r\n            return (\r\n              <AccountDiv\r\n                key={index}\r\n                accountType={account.accountType}\r\n                balance={account.balance}\r\n                removeAccount={() =>\r\n                  this.handleRemoveAccount(account.accountName)\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactAccount;\r\n","import React, { Component } from \"react\";\r\nclass MigrantDiv extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`city ${\r\n          parseFloat(this.props.id) % 2 === 0 ? \"even\" : \"odd\"\r\n        }`}\r\n      >\r\n        <h5>\r\n          City:{this.props.city} Latitude:{this.props.latitude}Longitude:{\" \"}\r\n          {this.props.longitude} Population: {this.props.population}\r\n          <button className=\"removeCity\" onClick={this.props.removeCity}>\r\n            Remove\r\n          </button>\r\n        </h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MigrantDiv;\r\n","async function clearData() {\r\n  const url = \"http://127.0.0.1:5000/\";\r\n  return await postData(url + \"clear\");\r\n}\r\n\r\nasync function getData() {\r\n  const url = \"http://127.0.0.1:5000/\";\r\n  let data = await postData(url + \"all\");\r\n  return data;\r\n}\r\n\r\nasync function addData(cityData) {\r\n  const url = \"http://127.0.0.1:5000/\";\r\n  let data = await postData(url + \"add\", cityData);\r\n  return data;\r\n}\r\n\r\nasync function deleteData(key) {\r\n  const url = \"http://127.0.0.1:5000/\";\r\n  let data = await postData(url + \"delete\", { key: Number(key) });\r\n  return data;\r\n}\r\n\r\nasync function updateData(cityObj) {\r\n  const url = \"http://127.0.0.1:5000/\";\r\n  let data = await postData(url + \"update\", cityObj);\r\n  return data;\r\n}\r\n\r\n//const url = \"http://127.0.0.1:5000/\";\r\n\r\nasync function postData(url = \"\", data = {}) {\r\n  // Default options are marked with *\r\n  const response = await fetch(url, {\r\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n    mode: \"cors\", // no-cors, *cors, same-origin\r\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"same-origin\", // include, *same-origin, omit\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: \"follow\", // manual, *follow, error\r\n    referrer: \"no-referrer\", // no-referrer, *client\r\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n  });\r\n\r\n  const json = await response.json(); // parses JSON response into native JavaScript objects\r\n  json.status = response.status;\r\n  json.statusText = response.statusText;\r\n  return json;\r\n}\r\n\r\nexport { postData, getData, addData, clearData, deleteData, updateData };\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { Community } from \"../functions\";\r\nimport MigrantDiv from \"./MigrantDiv\";\r\nimport { getData, addData, deleteData, updateData } from \"./api.js\";\r\n\r\nclass Migrant extends Component {\r\n  state = { country: new Community() };\r\n  componentDidMount = async () => {\r\n    let { country } = this.state;\r\n    let onLoad = await getData();\r\n    for (let b of onLoad) {\r\n      country.createCity(b.name, b.key, b.latitude, b.longitude, b.population);\r\n    }\r\n    this.setState({ country: country });\r\n  };\r\n\r\n  creatCity = () => {\r\n    let { country } = this.state;\r\n    let newCity = country.createCity(\r\n      this.cityName.value,\r\n      0,\r\n      this.latitudeNum.value,\r\n      this.longitudeNum.value,\r\n      this.populationNum.value\r\n    );\r\n    if (newCity.result === false) {\r\n      alert(newCity.message);\r\n      return;\r\n    }\r\n\r\n    addData(newCity.newCity);\r\n\r\n    this.setState({ country: country });\r\n    this.cityName.value = \"\";\r\n    this.latitudeNum.value = \"\";\r\n    this.longitudeNum.value = \"\";\r\n    this.populationNum.value = \"\";\r\n  };\r\n\r\n  operatePop(operator) {\r\n    let { country } = this.state;\r\n\r\n    let city = country.popOperator(\r\n      this.cityList.value,\r\n      this.cityList.options[this.cityList.selectedIndex].getAttribute(\"num\"),\r\n      this.amount.value,\r\n      operator\r\n    );\r\n    console.log(city);\r\n    updateData(city);\r\n\r\n    this.setState({ country: country });\r\n  }\r\n\r\n  handleDeleteCity = id => {\r\n    let { country } = this.state;\r\n    country.deleteCity(id);\r\n    deleteData(id);\r\n    this.setState({ country: country });\r\n  };\r\n  render() {\r\n    let { country } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"card\">\r\n          <div className=\"cardInside\">\r\n            <div>\r\n              City Name:\r\n              <input\r\n                type=\"text\"\r\n                ref={input => {\r\n                  this.cityName = input;\r\n                }}\r\n              />\r\n              Latitude:\r\n              <input\r\n                type=\"number\"\r\n                ref={input => {\r\n                  this.latitudeNum = input;\r\n                }}\r\n              />\r\n              Longitude:{\" \"}\r\n              <input\r\n                type=\"number\"\r\n                ref={input => {\r\n                  this.longitudeNum = input;\r\n                }}\r\n              />\r\n              Population:{\" \"}\r\n              <input\r\n                type=\"number\"\r\n                ref={input => {\r\n                  this.populationNum = input;\r\n                }}\r\n              />{\" \"}\r\n              <button className=\"int\" onClick={this.creatCity}>\r\n                Create\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <hr className=\"hr\" />\r\n          <div>\r\n            {\"*****\"}\r\n            Total Population:{country.getPopulation()}\r\n            {\"*****\"} <span id=\"topop\"></span>\r\n            The Most Northern City:{country.getMostNorthern()}\r\n            {\"*****\"}\r\n            <span id=\"northern\"></span>\r\n            The Most Southern City:{country.getMostSouthern()}\r\n            {\"*****\"}\r\n            <span id=\"southern\"></span>\r\n          </div>\r\n\r\n          <hr className=\"hr\" />\r\n          <input\r\n            type=\"number\"\r\n            ref={input => {\r\n              this.amount = input;\r\n            }}\r\n          />\r\n          <form>\r\n            <select\r\n              ref={select => {\r\n                this.cityList = select;\r\n              }}\r\n            >\r\n              {country.communityCities.map((city, index) => {\r\n                return (\r\n                  <option key={index + 1} num={index + 1} value={city.name}>\r\n                    {city.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </form>\r\n          <button\r\n            className=\"int\"\r\n            id=\"moveInBtn\"\r\n            onClick={() => {\r\n              this.operatePop(\"moveIn\");\r\n            }}\r\n          >\r\n            Move In\r\n          </button>\r\n\r\n          <button\r\n            className=\"int\"\r\n            id=\"noveOutBtn\"\r\n            onClick={() => {\r\n              this.operatePop(\"moveOut\");\r\n            }}\r\n          >\r\n            Move Out\r\n          </button>\r\n        </div>\r\n        <div className=\"cityList\">\r\n          <h3 className=\"cityList1\">City List:</h3>\r\n          {country.communityCities.map((city, index) => {\r\n            return (\r\n              <MigrantDiv\r\n                key={index}\r\n                id={index}\r\n                population={city.population}\r\n                city={city.name}\r\n                longitude={city.longitude}\r\n                latitude={city.latitude}\r\n                removeCity={() => this.handleDeleteCity(city.key)}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Migrant;\r\n","export class ListNode {\r\n  constructor(subject, amount) {\r\n    this.forwardNode = null;\r\n    this.subject = subject;\r\n    this.amount = amount;\r\n    this.previousNode = null;\r\n  }\r\n}\r\n\r\nclass LinkedList {\r\n  constructor() {\r\n    this.flag = null;\r\n    this.head = null;\r\n  }\r\n\r\n  insert(subject, amount) {\r\n    if (this.flag === null) {\r\n      this.flag = new ListNode(subject, amount);\r\n      this.head = this.flag;\r\n    } else if (this.flag.forwardNode === null) {\r\n      this.flag.forwardNode = new ListNode(subject, amount);\r\n      this.flag = this.flag.forwardNode; //now, the flag is chaged to new node\r\n    } else {\r\n      let newNode = new ListNode(subject, amount);\r\n      newNode.forwardNode = this.flag.forwardNode;\r\n      this.flag.forwardNode = newNode;\r\n    }\r\n  }\r\n\r\n  first() {\r\n    this.flag = this.head;\r\n  }\r\n\r\n  last() {\r\n    if (this.flag === null) return;\r\n    while (this.flag.forwardNode !== null) {\r\n      this.flag = this.flag.forwardNode;\r\n    }\r\n  }\r\n\r\n  next() {\r\n    if (this.flag === null || this.flag.forwardNode === null) return;\r\n    this.flag = this.flag.forwardNode;\r\n  }\r\n\r\n  previous() {\r\n    if (this.flag === this.head || this.flag === null) return;\r\n    let seekingNode = this.head;\r\n    while (this.flag !== seekingNode.forwardNode) {\r\n      seekingNode = seekingNode.forwardNode;\r\n    }\r\n    this.flag = seekingNode;\r\n  }\r\n\r\n  delete() {\r\n    if (this.flag === null) return;\r\n    if (this.flag === this.head) {\r\n      if (this.flag.forwardNode !== null) {\r\n        this.flag = this.flag.forwardNode;\r\n        this.head = this.flag;\r\n      } else {\r\n        this.flag = null;\r\n        this.head = null;\r\n      }\r\n      return;\r\n    }\r\n    let seekingNode = this.head;\r\n    while (this.flag !== seekingNode.forwardNode) {\r\n      seekingNode = seekingNode.forwardNode;\r\n    }\r\n    if (this.flag.forwardNode === null) {\r\n      this.flag = seekingNode;\r\n      this.flag.forwardNode = null;\r\n    } else {\r\n      let next = this.flag.forwardNode;\r\n      this.flag = seekingNode;\r\n      this.flag.forwardNode = next;\r\n      this.flag = this.flag.forwardNode;\r\n    }\r\n  }\r\n\r\n  getTotal() {\r\n    return this.sumAmount(this.head);\r\n  }\r\n\r\n  sumAmount(flag) {\r\n    if (flag === null) return 0;\r\n    if (flag.forwardNode === null) {\r\n      return flag.amount;\r\n    } else {\r\n      return this.sumAmount(flag.forwardNode) + flag.amount;\r\n    }\r\n  }\r\n\r\n  *value() {\r\n    let current = this.head;\r\n    while (current !== null) {\r\n      yield current;\r\n      current = current.forwardNode;\r\n    }\r\n  }\r\n  [Symbol.iterator]() {\r\n    return this.value();\r\n  }\r\n}\r\n\r\nexport default LinkedList;\r\n","import React from \"react\";\r\nimport smb from \"../../image/smb.png\";\r\nconst ThemeContext = React.createContext();\r\n\r\nclass ThemeContextProvider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fontColor: \"black\",\r\n      setFontColor: this.setFontColor,\r\n      bgPic: smb,\r\n      setBgPic: this.setBgPic\r\n    };\r\n  }\r\n  setFontColor = event => {\r\n    this.setState({ fontColor: event.target.value });\r\n  };\r\n  setBgPic = event => {\r\n    this.setState({ bgPic: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ThemeContext.Provider value={{ ...this.state }}>\r\n        {/* use this.props.children to indicate children compoments such as LinkedList, FIFO components */}\r\n        {this.props.children}\r\n      </ThemeContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ThemeContextProvider, ThemeContext };\r\n","import React, { useContext, useState } from \"react\";\r\nimport { ThemeContext } from \"../context/ThemeContext\";\r\n\r\nconst NewNode = props => {\r\n  const context = useContext(ThemeContext);\r\n  let [fColor] = useState(context.fontColor);\r\n  return (\r\n    <div className=\"inNode\" style={{ color: fColor }}>\r\n      <span> Amount: {props.amount} </span>\r\n      <span> subject: {props.subject} </span>\r\n      {props.isFlag ? (\r\n        <span>\r\n          <button onClick={props.handleDeleteEvent}> Delete </button>\r\n          <span className=\"flag\"> Flag </span>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NewNode;\r\n","import React, { useState, useEffect, useRef, Fragment } from \"react\";\r\nimport LinkedList from \"./LinkList\";\r\nimport NewNode from \"./LinkDiv\";\r\nimport \"./Link.css\";\r\n\r\nconst List = props => {\r\n  const [linked, setLinked] = useState(new LinkedList());\r\n  const subjectName = useRef(null);\r\n  const amount = useRef(null);\r\n  useEffect(() => {\r\n    if (!linked) {\r\n      setLinked(new LinkedList());\r\n    }\r\n    // while use setLinked outside useEffect, if the value is different, it will trigger this function\r\n    // and update the page\r\n    setLinked(linked);\r\n  }, [linked]);\r\n  const changeValue = () => {\r\n    linked.insert(subjectName.current.value, amount.current.value);\r\n    setLinked(cloneLinked(linked));\r\n  };\r\n  const next = () => {\r\n    linked.next();\r\n    setLinked(cloneLinked(linked));\r\n  };\r\n  const previous = () => {\r\n    linked.previous();\r\n    setLinked(cloneLinked(linked));\r\n  };\r\n  const last = () => {\r\n    linked.last();\r\n    setLinked(cloneLinked(linked));\r\n  };\r\n  const first = () => {\r\n    linked.first();\r\n    setLinked(cloneLinked(linked));\r\n  };\r\n  const handleDeleteEvent = () => {\r\n    linked.delete();\r\n    setLinked(cloneLinked(linked));\r\n  };\r\n  const cloneLinked = linked => {\r\n    //clone hole class instance, let react know something is different and have to update page\r\n    var clone = Object.assign(\r\n      Object.create(Object.getPrototypeOf(linked)),\r\n      linked\r\n    );\r\n    return clone;\r\n  };\r\n\r\n  const creatNewNode = e => {\r\n    if (linked === null) return;\r\n    return listAllNode(linked.head, linked.flag);\r\n  };\r\n  //the flag is head now, but it will be changed to next flag.\r\n  const listAllNode = (flag, current) => {\r\n    if (flag === null) return;\r\n    if (flag.forwardNode === null) {\r\n      return (\r\n        <NewNode\r\n          amount={flag.amount}\r\n          subject={flag.subject}\r\n          handleDeleteEvent={handleDeleteEvent}\r\n          isFlag={flag === current ? true : false}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <NewNode\r\n            amount={flag.amount}\r\n            subject={flag.subject}\r\n            handleDeleteEvent={handleDeleteEvent}\r\n            isFlag={flag === current ? true : false}\r\n          />\r\n          {listAllNode(flag.forwardNode, current)}\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"linkHead\">\r\n        <h1>Linked List</h1>\r\n        <div className=\"linkList1\">\r\n          Subject Name:\r\n          <input type=\"text\" ref={subjectName} />\r\n          Number:\r\n          <input type=\"number\" ref={amount} />\r\n          <button\r\n            className=\"submitLL\"\r\n            onClick={e => {\r\n              changeValue(e);\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n          <button\r\n            className=\"submitLL\"\r\n            onClick={e => {\r\n              first(e);\r\n            }}\r\n          >\r\n            First\r\n          </button>\r\n          <button\r\n            className=\"submitLL\"\r\n            onClick={e => {\r\n              last(e);\r\n            }}\r\n          >\r\n            Last\r\n          </button>\r\n          <button\r\n            disabled={linked.flag === linked.head ? true : false}\r\n            className=\"submitLL\"\r\n            onClick={e => {\r\n              previous(e);\r\n            }}\r\n          >\r\n            Previous\r\n          </button>\r\n          <button\r\n            disabled={\r\n              linked.flag === null || linked.flag.forwardNode === null\r\n                ? true\r\n                : false\r\n            }\r\n            className=\"submitLL\"\r\n            onClick={e => {\r\n              next(e);\r\n            }}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"nodeList\">\r\n        <h3>Node List:</h3>\r\n        {creatNewNode()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default List;\r\n","import LinkedList from \"../link/LinkList\";\r\n\r\nclass Stack extends LinkedList {\r\n  putIN(subject, amount) {\r\n    this.last();\r\n    this.insert(subject, amount);\r\n  }\r\n  takeOut() {\r\n    this.last();\r\n    this.delete();\r\n  }\r\n}\r\n\r\nexport default Stack;\r\n","import LinkedList from \"../link/LinkList\";\r\n\r\nclass Queue extends LinkedList {\r\n  putIN(subject, amount) {\r\n    this.last();\r\n    this.insert(subject, amount);\r\n  }\r\n  takeOut() {\r\n    this.first();\r\n    this.delete();\r\n    this.last();\r\n  }\r\n}\r\n\r\nexport default Queue;\r\n","import React from \"react\";\r\nconst NewNode = props => {\r\n  return (\r\n    <div className=\"inNode1\">\r\n      <span> Name: {props.name} </span>\r\n      <span> Age: {props.age} </span>\r\n      <img className=\"linkPics\" src={props.src} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\nexport default NewNode;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport Stack from \"./Stack\";\r\nimport Queue from \"./Queue\";\r\nimport NewNode from \"./LinkDiv\";\r\nimport \"./Link.css\";\r\nimport MarioF from \"./img/MarioF.svg\";\r\nimport LuigiF from \"./img/LuigiF.svg\";\r\nimport Peach from \"./img/Peach.svg\";\r\nimport Toad from \"./img/Toad.svg\";\r\nimport Red from \"./img/Red.svg\";\r\nimport Green from \"./img/Green.svg\";\r\nimport Goomba from \"./img/Goomba.svg\";\r\n\r\nconst List = props => {\r\n  const [FIFOLIFO, setFIFOLIFO] = useState(\"STACK\");\r\n  const [linked, setLinked] = useState(new Stack());\r\n  const [picsList, setPicsList] = useState([]);\r\n  useEffect(() => {\r\n    if (!linked) {\r\n      setLinked(new Stack());\r\n    }\r\n    setLinked(linked);\r\n  }, [linked]);\r\n  const randomPics = () => {\r\n    let length = charactersPics.characters.length;\r\n    let flag = true;\r\n    let num = -1;\r\n    if (picsList.length === length) return num;\r\n    while (flag) {\r\n      num = Math.floor(Math.random() * length);\r\n      if (!picsList.includes(num)) {\r\n        picsList.push(num);\r\n        setPicsList(picsList);\r\n        flag = false;\r\n      }\r\n    }\r\n\r\n    return num;\r\n  };\r\n  const changeValue = () => {\r\n    let random = randomPics();\r\n    if (random === -1) return;\r\n    linked.putIN(\"\", random);\r\n    setLinked(cloneLinked(linked));\r\n  };\r\n\r\n  const takeOut = () => {\r\n    var index = picsList.indexOf(linked.flag.amount);\r\n    if (index !== -1) picsList.splice(index, 1);\r\n    linked.takeOut();\r\n    setLinked(cloneLinked(linked));\r\n  };\r\n  const cloneLinked = linked => {\r\n    var clone = Object.assign(\r\n      Object.create(Object.getPrototypeOf(linked)),\r\n      linked\r\n    );\r\n    return clone;\r\n  };\r\n\r\n  const creatNewNode = e => {\r\n    if (linked === null) return;\r\n    return listAllNode(linked.head, linked.flag);\r\n  };\r\n\r\n  const listAllNode = (flag, current) => {\r\n    if (flag === null) return;\r\n    if (flag.forwardNode === null) {\r\n      return (\r\n        <NewNode\r\n          src={charactersPics.characters[flag.amount].src}\r\n          name={charactersPics.characters[flag.amount].name}\r\n          age={charactersPics.characters[flag.amount].age}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <NewNode\r\n            src={charactersPics.characters[flag.amount].src}\r\n            name={charactersPics.characters[flag.amount].name}\r\n            age={charactersPics.characters[flag.amount].age}\r\n          />\r\n          {listAllNode(flag.forwardNode, current)}\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n  const switchType = () => {\r\n    if (FIFOLIFO === \"STACK\") {\r\n      setLinked(new Queue());\r\n      setFIFOLIFO(\"QUEUE\");\r\n    } else {\r\n      setLinked(new Stack());\r\n      setFIFOLIFO(\"STACK\");\r\n    }\r\n    setPicsList([]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"linkHead\">\r\n        <button\r\n          className=\"switch\"\r\n          onClick={e => {\r\n            switchType(e);\r\n          }}\r\n        >\r\n          {FIFOLIFO === \"STACK\" ? \"QUEUE\" : \"STACK\"}\r\n        </button>\r\n\r\n        <h1> {FIFOLIFO}</h1>\r\n        <div className=\"linkList1\">\r\n          <button\r\n            className=\"submitLL\"\r\n            onClick={e => {\r\n              changeValue(e);\r\n            }}\r\n          >\r\n            Put In\r\n          </button>\r\n\r\n          <button\r\n            className=\"submitLL\"\r\n            onClick={e => {\r\n              takeOut(e);\r\n            }}\r\n          >\r\n            Take Out\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"nodeList\">\r\n        <h3>Node List:</h3>\r\n        {creatNewNode()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default List;\r\n\r\nconst charactersPics = {\r\n  characters: [\r\n    { name: \"Mario\", age: \"26\", src: MarioF },\r\n    { name: \"Luigi\", age: \"25\", src: LuigiF },\r\n    { name: \"Peach\", age: \"23\", src: Peach },\r\n    { name: \"Toad\", age: \"18\", src: Toad },\r\n    { name: \"Red Koopa Troopa\", age: \"15\", src: Red },\r\n    { name: \"Green Koopa Troopa\", age: \"15\", src: Green },\r\n    { name: \"Goomba\", age: \"12\", src: Goomba }\r\n  ]\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { ThemeContext } from \"./ThemeContext.js\";\r\nimport smb from \"../../image/smb.png\";\r\nimport smb1 from \"../../image/smb1.png\";\r\n\r\nclass Theme extends Component {\r\n  static contextType = ThemeContext;\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Welcome to Word Controller</h2>\r\n        <div className=\"listContent\">\r\n          <br></br>\r\n          <label className=\"lbllist\">\r\n            Select Font Color:\r\n            <select\r\n              value={this.context.fontColor}\r\n              onChange={this.context.setFontColor}\r\n            >\r\n              <option value=\"Default\">Black(Default)</option>\r\n              <option value=\"purple\">Purple</option>\r\n              <option value=\"blue\">Blue</option>\r\n            </select>\r\n          </label>\r\n          <br></br>\r\n          <br></br>\r\n\r\n          <label className=\"lbllist\">\r\n            Select Background:\r\n            <select value={this.context.bgPic} onChange={this.context.setBgPic}>\r\n              <option value={smb}>pic1(Default)</option>\r\n              <option value={smb1}>pic2</option>\r\n            </select>\r\n          </label>\r\n          <br></br>\r\n          <br></br>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Theme };\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MyIcon from \"./components/MyIcon\";\nimport icon from \"./components/icon/icon.svg\";\nimport star from \"./components/icon/star.svg\";\nimport money from \"./components/icon/money.svg\";\nimport link from \"./components/icon/link.svg\";\nimport tictactoe from \"./components/icon/tictactoe.svg\";\nimport context from \"./components/icon/context.svg\";\nimport Tictactoe from \"./components/tictactoe/tictactoe\";\nimport ReactAccount from \"./components/account/account\";\nimport Migrant from \"./components/city/Migrant\";\nimport LinkListHook from \"./components/link/LinkListHook\";\nimport Fire from \"./components/icon/Fire.svg\";\nimport InAndOut from \"./components/FIFO&FIFO/InAndOut\";\nimport { Theme } from \"./components/context/ContextMain\";\nimport { ThemeContext } from \"./components/context/ThemeContext\";\n\nclass App extends React.Component {\n  static contextType = ThemeContext;\n  constructor() {\n    super();\n    this.icons = [\n      {\n        src: icon,\n        name: \"Mario\",\n        heading: \"React Starting Page\",\n        onImageClick: this.cityCommunity\n      },\n      {\n        src: tictactoe,\n        name: \"Mario3\",\n        heading: \"React Starting Page\",\n        onImageClick: this.startGame\n      },\n      {\n        src: star,\n        name: \"Mario2\",\n        heading: \"React Starting Page\",\n        onImageClick: this.goBack\n      },\n      {\n        src: money,\n        name: \"Mario4\",\n        heading: \"React Starting Page\",\n        onImageClick: this.myAccount\n      },\n      {\n        src: link,\n        name: \"Mario5\",\n        heading: \"React Starting Page\",\n        onImageClick: this.linkedList\n      },\n      {\n        src: Fire,\n        name: \"Mario6\",\n        heading: \"React Starting Page\",\n        onImageClick: this.inAndOut\n      },\n      {\n        src: context,\n        name: \"Mario7\",\n        heading: \"React Starting Page\",\n        onImageClick: this.myContext\n      }\n    ];\n    this.sences = {\n      startPage: (\n        <div>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </div>\n      ),\n      gamePage: (\n        <div>\n          <Tictactoe />\n        </div>\n      ),\n      accountPage: (\n        <div className=\"accountHead\">\n          <h1>Welcome to Super Mario Bank</h1>\n          <ReactAccount />\n        </div>\n      ),\n      cityCommunity: (\n        <div>\n          <div className=\"marioWorld\">\n            <h1>Welcome to Super Mario World</h1>\n          </div>\n          <Migrant />\n        </div>\n      ),\n      linkedList: (\n        <div>\n          <LinkListHook />\n        </div>\n      ),\n      inAndOut: (\n        <div>\n          <InAndOut />\n        </div>\n      ),\n      myContext: (\n        <div>\n          <Theme />\n        </div>\n      )\n    };\n    this.state = { sences: this.sences.startPage };\n  }\n\n  startGame = () => {\n    this.setState({ sences: this.sences.gamePage });\n  };\n\n  myAccount = () => {\n    this.setState({ sences: this.sences.accountPage });\n  };\n\n  goBack = () => {\n    this.setState({ sences: this.sences.startPage });\n  };\n\n  cityCommunity = () => {\n    this.setState({ sences: this.sences.cityCommunity });\n  };\n\n  linkedList = () => {\n    this.setState({ sences: this.sences.linkedList });\n  };\n\n  inAndOut = () => {\n    this.setState({ sences: this.sences.inAndOut });\n  };\n\n  myContext = () => {\n    this.setState({ sences: this.sences.myContext });\n  };\n\n  render() {\n    console.log(this.context);\n    return (\n      <div className=\"App\">\n        <div className=\"iconArea\">\n          {this.icons.map(item => (\n            <MyIcon\n              src={item.src}\n              name={item.name}\n              key={item.name}\n              onImageClick={item.onImageClick}\n            />\n          ))}\n        </div>\n\n        <header className=\"App-header\">{this.state.sences}</header>\n        <div\n          className=\"bg\"\n          style={{ backgroundImage: \"url(\" + this.context.bgPic + \")\" }}\n        >\n          {/* <img src= {smb}/> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeContextProvider } from \"./components/context/ThemeContext\";\n\nReactDOM.render(\n  <ThemeContextProvider>\n    <App />\n  </ThemeContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}